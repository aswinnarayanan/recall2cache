name: Build and Release

on:
  push:
    tags:
      - "*"
  workflow_dispatch:
    inputs:
      version:
        description: 'Custom release version (optional)'
        required: false

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            filename: recall2cache
            archive_cmd: tar -czvf
            archive_ext: .tar.gz
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: '1.24'

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          go build -o ${{ matrix.filename }}

      - name: Create archive
        run: |
          ${{ matrix.archive_cmd }} ${{ matrix.filename }}-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.archive_ext }} ${{ matrix.filename }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.filename }}-artifact
          path: ${{ matrix.filename }}-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.archive_ext }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          path: artifacts
          pattern: '*-artifact'

      - name: Debug artifact download
        run: |
          echo "Listing contents of artifacts directory:"
          ls -la artifacts
          echo "Listing all files recursively:"
          find artifacts -type f

      - name: Prepare release assets
        run: |
          mkdir -p release
          cp artifacts/*/* release/

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(date +'%Y.%m.%d')
          gh release create $VERSION \
            --title "$VERSION" \
            --notes "$VERSION" \
            release/*